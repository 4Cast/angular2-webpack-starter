exports.getUUID = function getUUID(){		return generateUUID();	}; var stringToDate = function (stringValue){		var formatter = require("formatting");	try {	var newDate = formatter.parseDate(stringValue, {locale: "fr"})}catch (e){	var newDate = null;}return newDate;};var singleNumber = function(){		return 10;	}// roundToTwo// found this here http://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-in-javascriptvar roundToTwo = function(num) {    		var formatter = require("formatting");     var value = +(Math.round(num + "e+2")  + "e-2");       return formatter.formatNumber(value, "#,###.00");   // return value.toFixed(2);    }var wholeNumber = function(num) {		var value = mathRound10(num, 0);	var formatter = require("formatting"); 	 return formatter.formatNumber(value, "#,###");}  function decimalAdjust(type, value, exp) {    // If the exp is undefined or zero...	    if (typeof exp === 'undefined' || +exp === 0) {	      return Math[type](value);	    }    value = +value;    exp = +exp;    // If the value is not a number or the exp is not an integer...	    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {	      return NaN;	    }    // Shift    value = value.toString().split('e');    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));    // Shift back    value = value.toString().split('e');    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));  };  // Decimal round    function  mathRound10 (value, exp) {      return decimalAdjust('round', value, exp);    };  // Decimal floor  function mathFloor10(value, exp) {      return decimalAdjust('floor', value, exp);    };  // Decimal ceil    function  mathCeil10(value, exp) {      return decimalAdjust('ceil', value, exp);    };exports.stringToDate = stringToDate;exports.singleNumber = singleNumber;exports.roundToTwo = roundToTwo;exports.wholeNumber = wholeNumber;