model.budgetVariationDetail = new DataClass("budgetVariationDetails", "public");model.budgetVariationDetail.id = new Attribute("storage","uuid", "key auto", {autogenerate:true});model.budgetVariationDetail.parentVariation = new Attribute("relatedEntity", "budgetVariation", "budgetVariation");model.budgetVariationDetail.detailAmount_int = new Attribute("storage", "long64");model.budgetVariationDetail.detailCostCode = new Attribute("relatedEntity", "costCode", "costCode");model.budgetVariationDetail.lineNumber = new Attribute("storage", "long");model.budgetVariationDetail.variationNumber = new Attribute("alias", 'long', 'parentVariation.variationNumber');model.budgetVariationDetail.description = new Attribute("alias", 'string', 'parentVariation.description');model.budgetVariationDetail.variationStatus = new Attribute("alias", 'string', 'parentVariation.variationStatusName');model.budgetVariationDetail.detailAmount = new Attribute("calculated", "string");var multiplier = 1000000;model.budgetVariationDetail.detailAmount.onGet = function(){		return utilities.roundToTwo(this.detailAmount_int/multiplier);	}model.budgetVariationDetail.detailAmount.onSet = function(value){		this.detailAmount_int = number(value)*multiplier;	}model.budgetVariationDetail.methods.importJSON = function(jsonString){		ds.budgetVariationDetail.all().remove();        var multiplier = 1000000;    var percentMultiplier = 100000;             var objCollection = JSON.parse(jsonString);   			    objCollection.forEach( function(theObject) { 		     		    	var theCostCode = ds.costCode.find('id == :1', theObject.uid_ccod);		    	var theParentVariation = ds.budgetVariation.find('id == :1', theObject.uid_bvar);		   		//var theUser = ds.user.find('uid_user = :1', theObject.uid_user);		     				     theDetail = new ds.budgetVariationDetail({				     					     	id							: theObject.uid_bvard,				     	lineNumber					: theObject.variationDetailNumber,				     	detailAmount_int			: theObject.costCodeAmount * multiplier,				     	detailCostCode 				: theCostCode,				     	parentVariation				: theParentVariation	     					     });		     		    theDetail.save();		      		  });	}model.budgetVariationDetail.methods.importJSON.scope = 'public';var utilities = require('utilities');